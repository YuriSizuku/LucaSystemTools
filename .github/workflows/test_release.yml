name: test_release
on:
  push: {tags:  ['v*'] } # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build_release:
    runs-on: windows-latest # default batch, powershell
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with: {dotnet-version: 3.1.301}
    - name: Install dependencies
      run: cd LucaSystemTools/LucaSystemTools && dotnet restore
    - name: Build
      run: cd LucaSystemTools/LucaSystemTools && dotnet build --configuration Release --no-restore
    - name: rename
      run : ren LucaSystemTools/LucaSystemTools/bin/Release/netcoreapp3.1/ LucaSystemTool
    - name: 7zip release
      run : 7z a -t7z -mx=9 LucaSystemTool_release.7z ./LucaSystemTools/LucaSystemTools/bin/Release/LucaSystemTool # must have ., or zip the whole path
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }} # {{github.ref}} when pushing tag is tag nameï¼Œelse refs/heads/[branch]
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - This is auto build
          - Second Change
        draft: True
        prerelease: True
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. 
        asset_path: ./LucaSystemTool_release.7z
        asset_name: LucaSystemTool_release.7z
        asset_content_type: application/zip
